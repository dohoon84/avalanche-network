map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# 공통 설정
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

proxy_http_version 1.1;
add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-csrf-token';
add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
add_header 'Access-Control-Allow-Credentials' 'true';
add_header 'Access-Control-Max-Age' 1728000;
add_header X-Frame-Options "ALLOWALL";
add_header Content-Security-Policy "
    default-src 'self';
    frame-ancestors 'self' https://aem.io;
    frame-src 'self' https://*.aem.io;
    img-src 'self' data:;
    script-src 'self' 'unsafe-eval' 'unsafe-inline';
    style-src 'self' 'unsafe-inline';
";

# BlockScout 서버 설정
server {
    listen 4300;
    listen [::]:4300;
    server_name _;

    add_header Content-Security-Policy "
        default-src 'self' *;
        frame-ancestors 'self' *;
        connect-src 'self' *;
        frame-src 'self' *;
        img-src 'self' data:;
        script-src 'self' 'unsafe-eval' 'unsafe-inline';
        style-src 'self' 'unsafe-inline';
    ";

    add_header Access-Control-Allow-Origin '*';
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    location ~ ^/(api|socket|sitemap.xml|auth/auth0|auth/auth0/callback|auth/logout) {
      proxy_pass            ${BACK_PROXY_PASS};
      proxy_set_header      Upgrade $http_upgrade;
      proxy_set_header      Connection $connection_upgrade;
      proxy_cache_bypass    $http_upgrade;
    }

    location / {
      proxy_pass ${FRONT_PROXY_PASS};
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_cache_bypass $http_upgrade;
    }
}

# Remix IDE 서버 설정
server {
    listen 4400;
    listen [::]:4400;
    server_name _;


    add_header Access-Control-Allow-Origin '*';
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    location / {
        proxy_pass ${REMIX_PROXY_PASS};
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket 지원
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
    }
}

# Web3Signer 서버 설정
server {
    listen 4500;
    listen [::]:4500;
    server_name _;

    add_header Content-Security-Policy "
        default-src 'self' *;
        connect-src 'self' *;
        frame-ancestors 'self' *;
        frame-src 'self' *;
        img-src 'self' data:;
        style-src 'self' 'unsafe-inline';
    ";

    if ($request_method = 'OPTIONS') {
        return 204;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    location / {
        proxy_pass ${WEB3SIGNER_PROXY_PASS};

        # web3signer의 Access-Control-* 헤더 제거
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;

        # 프록시 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
